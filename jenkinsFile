pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/BasmaUvt/ProjetDXC'
            }
        }

        stage('Install Dependencies') {
            steps {
            bat 'npm install'
            }
        }

        stage('Start Server and Run Tests') {
            steps {
                bat 'npm install --save-dev start-server-and-test'
                bat 'npm run start:ci'
            }
        }

stage('Build Docker Image') {
            steps {
                bat 'docker-compose build'
            }
        }

        stage('Deploy to Docker') {
            steps {
                bat 'docker-compose up -d'
            }
        }
    }
        post {
        always {
            bat 'npx mochawesome-merge "Cypress/cypress/results/*.json" > Cypress/mochawesome.json'
            bat 'npx mochawesome-report-generator Cypress/mochawesome.json'
            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'mochawesome-report', reportFiles: 'mochawesome.html', reportName: 'HTML Report', reportTitles: ''])
            bat 'docker-compose down'
            cleanWs()
        }
    }
        post {
        failure {
            mail (
                subject: "Échec du job '${env.JOB_NAME}'",
                body: "L'URL du job est : ${env.BUILD_URL}",
                to: 'besma.rakrouki@gmail.com'
            )
        }
        success {
            mail (
                subject: "Le job '${env.JOB_NAME}' a réussi",
                body: "L'URL du job est : ${env.BUILD_URL}",
                to: 'besma.rakrouki@gmail.com'
            )
        }
    }
}