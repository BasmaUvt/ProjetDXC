environment {
    SONAR_TOKEN = credentials('sonar-token')
}
pipeline {
    agent any

    stage('Checkout') {
        steps {
            checkout([
                $class: 'GitSCM', 
                branches: [[name: '*/main']], 
                 userRemoteConfigs: [[
                    credentialsId: 'GitHub', 
                    url: 'https://github.dxc.com/brakrouki2/ProjetDXC.git'
                ]]
            ])
        }
    }
        stage('Install Dependencies') {
            steps {
                bat 'npm install'
            }
        }

        stage('Start Server and Run Tests') {
            steps {
                bat 'node hashPasswords.js'
                bat 'npm install --save-dev start-server-and-test'
                bat 'npm run start:ci'
            }
        }

        stage('Start SonarQube') {
            steps {
                script {
                    bat 'docker start sonarqube || docker run -d --name sonarqube -p 9001:9000 sonarqube'
                }
            }
        }
        
        stage('SonarQube analysis') {
            steps {
                script {
    def scannerHome = tool 'SonarQube Scanner';
             withSonarQubeEnv('SonarQube Scanner') {
     def propertiesFilePath = "C:/Users/brakrouki2/OneDrive - DXC Production/Desktop/dossierdescapturpfe/ProjetDXC/sonar-project.properties"
            if (fileExists(propertiesFilePath)) {
     bat "${scannerHome}\\sonar-scanner.bat -Dproject.settings=\"${propertiesFilePath}\" -Dsonar.login=sqa_45b23bbe1a6946b20e3858de5a081958ab435170"
             } else {
                        error "Le fichier sonar-project.properties n'a pas été trouvé à l'emplacement spécifié."
                        }
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                bat 'docker-compose build'
            }
        }

        stage('Deploy to Docker') {
            steps {
                bat 'docker-compose up -d'
            }
        }
    }

    post {
        failure {
            mail (
                subject: "Échec du job '${env.JOB_NAME}'",
                body: "L'URL du job est : ${env.BUILD_URL}",
                to: 'besma.rakrouki2@dxc.com'
            )
        }
        success {
            mail (
                subject: "Le job '${env.JOB_NAME}' a réussi",
                body: "L'URL du job est : ${env.BUILD_URL}",
                to: 'besma.rakrouki2@dxc.com'
            )
        }
    }
}